[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "esphome-impulse-cover"
description = "ESPHome component for impulse-driven cover controllers"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "ESPHome Community", email = "info@esphome.io"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Home Automation",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
keywords = ["esphome", "home-assistant", "cover", "automation"]
requires-python = ">=3.8"
dynamic = ["version"]

[project.urls]
"Homepage" = "https://github.com/berard/esphome-impulse-cover"
"Bug Reports" = "https://github.com/berard/esphome-impulse-cover/issues"
"Source" = "https://github.com/berard/esphome-impulse-cover"
"Documentation" = "https://github.com/berard/esphome-impulse-cover/blob/main/README.md"

# Configuration pour Black (Python formatter)
[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # Directories to exclude
  \.git
  | \.venv
  | venv
  | build
  | dist
  | __pycache__
)/
'''

# Configuration pour isort (import sorting)
[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
known_first_party = ["esphome"]
known_esphome = ["esphome"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "ESPHOME", "FIRSTPARTY", "LOCALFOLDER"]
force_sort_within_sections = true

# Pylint Configuration
[tool.pylint.master]
extension-pkg-whitelist = ["esphome"]

[tool.pylint.format]
max-line-length = 100

[tool.pylint.messages_control]
disable = [
    "too-few-public-methods",
    "too-many-arguments",
    "too-many-instance-attributes",
    "broad-except",
    "import-error",
    "missing-module-docstring",
    "missing-class-docstring",
    "missing-function-docstring",
]

# Flake8 Configuration
[tool.flake8]
max-line-length = 100
extend-ignore = [
    "E203",  # whitespace before ':'
    "E501",  # line too long (handled by black)
    "W503",  # line break before binary operator
]
exclude = [
    ".git",
    "__pycache__",
    ".venv",
    "venv",
    "build",
    "dist",
]

# Coverage Configuration
[tool.coverage.run]
source = ["components"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/.venv/*",
    "*/venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# MyPy Configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "esphome.*",
    "voluptuous.*",
]
ignore_missing_imports = true
